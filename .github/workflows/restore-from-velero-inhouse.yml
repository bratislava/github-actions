name: Restore from velero
on:
  workflow_call:
    inputs:
      runs-on:
        description: 'Define the type of machine to run the job on'
        type: string
        required: false
        default: '["self-hosted", "Linux", "X64", "bratislava"]'
      instance:
        description: 'Kubernetes app.kubernetes.io/instance'
        required: true
        type: string
      schedule:
        description: 'Name of velero backup schedule'
        required: false
        type: string
        default: 'wordpress-backup'
      namespace:
        description: 'Namespace where instance can be checked by helm'
        default: 'velero'
        required: true
        type: string
      cluster:
        description: 'Kubernetes cluster name'
        default: 'tkg-innov-dev'
        required: true
        type: string
      url:
        description: 'Kubernetes cluster url'
        default: 'https://tkg.dev.bratislava.sk'
        required: true
        type: string
      velero:
        description: 'Specify velero version if you need'
        default: 'v1.13.2'
        required: false
        type: string
    secrets:
      service-account:
        description: 'Kubernetes service account'
        required: true

jobs:
  restore:
    name: Restore from velero
    runs-on: ${{fromJSON(inputs.runs-on)}}
    steps:
      - name: Checking out
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Pipelines Version
        run: |
          echo "Pipelines version: 2.2.0"

      - name: Directory check
        run: pwd

      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v4.0.0

      - name: Kubernetes set service account token
        # to obtain token run: kubectl get secret <service account secret> -n=standalone -o jsonpath='{.data.token}' | base64 --decode  > token.tmp
        run: kubectl config set-credentials default --token=${{ secrets.service-account }}

      - name: Kubernetes set server with certificate account token
        run: kubectl config set-cluster ${{ inputs.cluster }}  --insecure-skip-tls-verify --server=${{ inputs.url }}

      - name: Kubernetes set context cluster
        run: kubectl config set-context ${{ inputs.cluster }} --cluster=${{ inputs.cluster }} --user=default

      - name: Kubernetes use context
        run: kubectl config use-context ${{ inputs.cluster }}

      - name: Helm tool installer
        uses: azure/setup-helm@v4.1.0

      - name: Helm version
        run: helm version

      - name: Setup velero
        uses: skifahrer/setup-velero@v1
        with:
          version: 'v1.10.3'

      - name: Velero version
        run: velero version

      - name: Restore from velero
        run: |
          # restore instance should be the same as helm instance
          velero restore create --from-schedule ${{ inputs.schedule }} --selector app.kubernetes.io/instance=${{ inputs.instance }}

      - name: Check velero logs
        run: velero get restores --label-columns=app.kubernetes.io/instance=${{ inputs.instance }} | tail -n1

      - name: Wait minute and recheck logs
        run: |
          sleep 60s
          velero get restores --label-columns=app.kubernetes.io/instance=${{ inputs.instance }} | tail -n1
