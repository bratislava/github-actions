name: General workflow which builds image from source using bratiska-cli.
on:
  workflow_call:
    inputs:
      runs-on:
        description: 'Define the type of machine to run the job on'
        type: string
        required: false
        default: '["self-hosted", "Linux", "X64", "bratislava"]'
      directory:
        description: 'A Folder within the repository where things should be build.'
        default: '/'
        required: false
        type: string
      debug:
        description: 'Debug flag'
        default: ''
        required: false
        type: string
      version:
        description: 'Bratiska-cli version'
        default: 'stable'
        required: false
        type: string
      build_image_no_registry:
        description: 'If you want to build image without registry.'
        default: '--build_image_no_registry'
        required: false
        type: string
      registry:
        description: 'Registry where should be built images stored'
        default: 'harbor.bratislava.sk'
        required: false
        type: string
      username:
        description: 'Docker username'
        default: 'robot$github_actions'
        required: false
        type: string
    secrets:
      sentry-token:
        description: 'Token used for sentry debugging.'
        required: false
      registry-pass:
        description: 'Password for registry.'
        required: false

jobs:
  build-with-bratiska-cli:
    name: Build with bratiska-cli
    runs-on: ${{fromJSON(inputs.runs-on)}}
    defaults:
      run:
        working-directory: ${{ inputs.directory }}
    steps:
      - name: Checking out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Pipelines Version
        run: |
          echo "Pipelines version: 2.2.3"

      - name: Directory check
        run: pwd

      - name: Check for Secret availability
        id: secret-check
        shell: bash
        run: |
          if [ "${{ secrets.registry-pass }}" != '' ]; then
          echo "available=true" >> $GITHUB_OUTPUT;
          else
          echo "available=false" >> $GITHUB_OUTPUT;
          fi

      - name: Login to Harbor
        if: ${{ steps.secret-check.outputs.available == 'true' }}
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.username }}
          password: ${{ secrets.registry-pass }}

      - name: Print pipeline summary
        run: |
          echo "### Bratiska-cli is building:" >> $GITHUB_STEP_SUMMARY
          echo ":arrow_right: Project folder: **${{ inputs.directory }}**" >> $GITHUB_STEP_SUMMARY

      - name: Install Prerequisites - Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Installing Bratiska-cli version
        run: |
          yarn global add bratislava/bratiska-cli#${{ inputs.version }}
          echo "~/.yarn/bin" >> $GITHUB_PATH

      - name: Running git fetch for Bratiska-cli
        run: git fetch

      - name: Print Bratiska-cli version
        run: bratiska-cli deploy --version

      - name: Running build with Bratiska-cli
        run: bratiska-cli build_image --env=staging --build_image_no_registry ${{ inputs.flag }} --sentry=${{ secrets.sentry-token }} ${{ inputs.debug }}
        continue-on-error: false

      - name: Print pipeline summary - image build
        run: |
          echo ":partying_face: Bratiska-cli successfully built an image from path: ${{ inputs.directory }}" >> $GITHUB_STEP_SUMMARY

      - name: Print pipeline comment - image build
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          header: Build Conditions
          append: true
          message: |
            :partying_face: Bratiska-cli successfully built an image from path: ${{ inputs.directory }}
